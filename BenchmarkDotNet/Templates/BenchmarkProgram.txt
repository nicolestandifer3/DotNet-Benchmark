using System;
using System.Diagnostics;
using System.Threading;
using System.Runtime.CompilerServices;
using BenchmarkDotNet;
using BenchmarkDotNet.Tasks;
using $TargetTypeNamespace$;
using $TargetMethodReturnTypeNamespace$;

namespace BenchmarkDotNet.Autogenerated
{
    public class Program : $TargetTypeName$
	{        
        public static void Main(string[] args)
		{
            System.Console.WriteLine(BenchmarkDotNet.EnvironmentHelper.GetFullEnvironmentInfo());
			Program instance = new Program();
            var settings = BenchmarkSettings.Parse(args);
            instance.RunBenchmark(settings);
			System.Console.WriteLine("// Benchmark finished");
        }

        public Program()
        {
			setupAction = () => { };
			idleAction = () => { $TargetMethodHoldValue$ Idle(); };
			targetAction = () => { $TargetMethodHoldValue$ $TargetMethodName$(); };			
        }

		$TargetMethodResultHolder$
		private Action setupAction, targetAction, idleAction;

$RunBenchmarkContent$

		private $TargetMethodReturnType$ Idle()
		{
		    $IdleImplementation$
		}
    }
}