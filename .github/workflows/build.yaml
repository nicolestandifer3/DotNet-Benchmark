name: build

on:
  pull_request:
  push:

permissions: write-all

jobs:

  build-windows-core:
    runs-on: windows-latest
    steps:
      - name: Disable Windows Defender
        run: Set-MpPreference -DisableRealtimeMonitoring $true
        shell: powershell
      - uses: actions/checkout@v3
      - name: Run task 'Build'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          ./build.cmd Build
      - name: Run task 'InTestsCore'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          ./build.cmd InTestsCore -e
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-windows-core-trx
          path: "**/*.trx"

  build-windows-full:
    runs-on: windows-latest
    steps:
      - name: Disable Windows Defender
        run: Set-MpPreference -DisableRealtimeMonitoring $true
        shell: powershell
      - uses: actions/checkout@v3
      - name: Run task 'Build'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          ./build.cmd Build
      - name: Run task 'InTestsFull'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          ./build.cmd InTestsFull -e
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-windows-full-trx
          path: "**/*.trx"

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64
      - name: Set up zlib-static
        run: sudo apt-get install -y libkrb5-dev
      - name: Run task 'Build'
        run: ./build.cmd Build
      - name: Run task 'UnitTests'
        run: ./build.cmd UnitTests -e
      - name: Run task 'InTestsCore'
        run: ./build.cmd InTestsCore -e
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-linux-trx
          path: "**/*.trx"

  build-macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Run task 'Build'
        run: ./build.cmd Build
      - name: Run task 'UnitTests'
        run: ./build.cmd UnitTests -e
      - name: Run task 'InTestsCore'
        run: ./build.cmd InTestsCore -e
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build-macos-trx
          path: "**/*.trx"
  
  report:
    concurrency: ci-${{ github.ref }}
    needs: [build-windows-full, build-windows-core, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Display structure of downloaded files
        run: ls -R
      - name: Report tests results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: test-results
          path: "**/*.trx"
          reporter: dotnet-trx
          fail-on-error: true
